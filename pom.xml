<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.xenoamess</groupId>
    <artifactId>commonx</artifactId>
    <version>0.10.11-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>${project.artifactId}</name>
    <description>Commonx, a package of Java utility classes for common use.
    </description>
    <url>https://github.com/XenoAmess/commonx</url>
    <licenses>
        <license>
            <name>GPLv2 with classpath exception</name>
            <url>${project.url}/blob/master/LICENSE</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>XenoAmess</name>
            <email>xenoamess@gmail.com</email>
            <organization>XenoAmess</organization>
            <url>https://github.com/xenoamess</url>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:${project.url}.git</connection>
        <developerConnection>${project.scm.connection}</developerConnection>
        <url>${project.url}</url>
        <tag>${project.version}</tag>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8
        </project.reporting.outputEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <java.version>8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <!---->
        <!---->
        <!--libraries versions-->
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-io.version>2.6</commons-io.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <commons-vfs2.version>2.6.0</commons-vfs2.version>
        <dom4j.version>2.1.1</dom4j.version>
        <eclipse-collections.version>10.0.0.M3</eclipse-collections.version>
        <guava.version>28.2-jre</guava.version>
        <jackson.version>2.10.2</jackson.version>
        <joml.version>1.9.21</joml.version>
        <log4j.version>2.13.0</log4j.version>
        <lwjgl.version>3.2.3</lwjgl.version>
        <slf4j.version>1.7.30</slf4j.version>
        <steamworks4j.version>1.8.0</steamworks4j.version>
        <JXInput.version>1.0.0</JXInput.version>
        <!---->
        <!---->
        <!--home made libraries versions-->
        <commonx.version>0.10.8</commonx.version>
        <multi_language.version>0.45.4</multi_language.version>
        <x8l.version>0.53.0</x8l.version>
        <SDL_GameControllerDB_Util.version>1.1.20200214</SDL_GameControllerDB_Util.version>
        <!---->
        <!---->
        <!--maven plugins versions-->
        <junit-jupiter.version>5.6.0</junit-jupiter.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
        <maven-project-info-reports-plugin.version>3.0.0
        </maven-project-info-reports-plugin.version>
        <maven-site-plugin.version>3.8.2</maven-site-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M4</maven-surefire-plugin.version>
        <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
        <templating-maven-plugin.version>1.0.0</templating-maven-plugin.version>
        <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
    </properties>

    <profiles>
        <profile>
            <id>ossrh</id>
            <!-- GPG mvn clean deploy -P release -Dgpg.passphrase=YourPassphase -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven-gpg-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jdk3</id>
            <activation>
                <property>
                    <name>jdk3</name>
                </property>
            </activation>
            <properties>
                <variant>joml-jdk3</variant>
                <hasNio>__NHAS_NIO__</hasNio>
                <javaExclude>org/joml/jre/**</javaExclude>
                <moduleInfoExclude>module-info.class</moduleInfoExclude>
            </properties>
        </profile>
        <profile>
            <id>jdk8</id>
            <activation>
                <jdk>[1.8,9)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <!--well we just use some functions that later than 8 there so.-->
                                <!--I myself don't use jdk 8 anymore, and don't care about writing a jdk8 version of these classes now.-->
                                <!--If anyone want implement it you can do it yourself.-->
                                <exclude>
                                    com/xenoamess/commonx/java/util/concurrent/atomic/**
                                </exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <variant>joml-jdk8</variant>
                <moduleInfoExclude>module-info.class</moduleInfoExclude>
            </properties>
        </profile>
        <profile>
            <id>jdk9</id>
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <build>
                <plugins>
                    <!-- Make sure the jdk9 profile is only used with a 1.9 JDK, and not
                        forcefully enabled via -Pjdk9, because antrun will not work on earlier JDKs,
                        because of missing tools.jar. -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>${maven-enforcer-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>enforce-versions</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireJavaVersion>
                                            <version>1.9</version>
                                        </requireJavaVersion>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Use the antrun plugin to build and run a post-processing Java application
                        to rewrite the Java class file version from 1.6 back to 1.2 in all compiled
                        class files. -->
                    <plugin>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jdk12</id>
            <activation>
                <jdk>[12,)</jdk>
            </activation>
        </profile>
    </profiles>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.lwjgl</groupId>
            <artifactId>lwjgl</artifactId>
            <version>${lwjgl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-bom</artifactId>
            <version>${log4j.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-vfs2</artifactId>
            <version>${commons-vfs2.version}</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources/</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.VERSION</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>


        <plugins>
            <plugin>
                <groupId>com.xenoamess</groupId>
                <artifactId>jcpp-maven-plugin</artifactId>
                <version>0.2.0</version>
                <executions>
                    <execution>
                        <id>preprocess-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>preprocess-sources</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>
                                ${basedir}/src/main/java-templates
                            </sourceDirectory>
                            <outputDirectory>
                                ${project.build.directory}/generated-sources/src/main/java
                            </outputDirectory>
                            <libPaths>
                                <param>${basedir}/src/main/resources/templates
                                </param>
                            </libPaths>
                        </configuration>
                    </execution>
                    <execution>
                        <id>preprocess-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>preprocess-test-sources</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>
                                ${basedir}/src/test/java-templates
                            </sourceDirectory>
                            <outputDirectory>
                                ${project.build.directory}/generated-test-sources/src/test/java
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--            <plugin>-->
            <!--                <artifactId>maven-resources-plugin</artifactId>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        <id>copy-annotations</id>-->
            <!--                        <phase>prepare-package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>copy-resources</goal>-->
            <!--                        </goals>-->
            <!--                        <configuration>-->
            <!--                            <resources>-->
            <!--                                <resource>-->
            <!--                                    <directory>target/generated-sources/src/main/java</directory>-->
            <!--                                </resource>-->
            <!--                            </resources>-->
            <!--                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>-->
            <!--                        </configuration>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--            </plugin>-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/src/main/java/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}
                </version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <locale>en</locale>
                    <show>private</show>
                    <reportOutputDirectory>../javadocs</reportOutputDirectory>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <docencoding>${project.reporting.outputEncoding}
                    </docencoding>
                    <additionalJOption>-J-Duser.language=en_US
                    </additionalJOption>

                    <tags>
                        <tag>
                            <name>apiNote</name>
                            <placement>a</placement>
                            <head>API Note:</head>
                        </tag>
                        <tag>
                            <name>implSpec</name>
                            <placement>a</placement>
                            <head>Implementation Requirements:</head>
                        </tag>
                        <tag>
                            <name>implNote</name>
                            <placement>a</placement>
                            <head>Implementation Note:</head>
                        </tag>
                        <tag>
                            <name>param</name>
                        </tag>
                        <tag>
                            <name>return</name>
                        </tag>
                        <tag>
                            <name>throws</name>
                        </tag>
                        <tag>
                            <name>since</name>
                        </tag>
                        <tag>
                            <name>version</name>
                        </tag>
                        <tag>
                            <name>serialData</name>
                        </tag>
                        <tag>
                            <name>see</name>
                        </tag>
                        <tag>
                            <name>jls</name>
                        </tag>
                    </tags>

                    <source>${maven.compiler.source}
                    </source>
                    <!--                    <javadocExecutable>${java.home}/bin/javadoc.exe-->
                    <!--                    </javadocExecutable>-->
                </configuration>

                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                    <excludes>
                        <exclude>**/PerformanceTests.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}
                    </source>
                    <target>${maven.compiler.target}
                    </target>
                    <encoding>utf-8</encoding>
                    <meminitial>128m</meminitial>
                    <maxmem>512m</maxmem>
                    <fork>true</fork>
                    <compilerVersion>${java.version}</compilerVersion>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <configuration>
                    <allowSnapshots>false</allowSnapshots>
                    <excludes>
                        <exclude>org.slf4j:*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>update-properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <locale>en</locale>
                    <show>private</show>
                    <reportOutputDirectory>../javadocs</reportOutputDirectory>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <docencoding>${project.reporting.outputEncoding}
                    </docencoding>
                    <additionalJOption>-J-Duser.language=en_US
                    </additionalJOption>

                    <tags>
                        <tag>
                            <name>apiNote</name>
                            <placement>a</placement>
                            <head>API Note:</head>
                        </tag>
                        <tag>
                            <name>implSpec</name>
                            <placement>a</placement>
                            <head>Implementation Requirements:</head>
                        </tag>
                        <tag>
                            <name>implNote</name>
                            <placement>a</placement>
                            <head>Implementation Note:</head>
                        </tag>
                        <tag>
                            <name>param</name>
                        </tag>
                        <tag>
                            <name>return</name>
                        </tag>
                        <tag>
                            <name>throws</name>
                        </tag>
                        <tag>
                            <name>since</name>
                        </tag>
                        <tag>
                            <name>version</name>
                        </tag>
                        <tag>
                            <name>serialData</name>
                        </tag>
                        <tag>
                            <name>see</name>
                        </tag>
                        <tag>
                            <name>jls</name>
                        </tag>
                    </tags>

                    <source>${maven.compiler.source}
                    </source>
                    <!--                    <javadocExecutable>${java.home}/bin/javadoc.exe-->
                    <!--                    </javadocExecutable>-->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <!-- select non-aggregate reports -->
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>


    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <name>OSS Snapshots Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <name>OSS Staging Repository</name>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/
            </url>
        </repository>
    </distributionManagement>
</project>